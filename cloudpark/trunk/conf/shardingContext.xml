<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                        http://www.dangdang.com/schema/ddframe/rdb 
                        http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">



	<!-- <util:properties id="messages" location="classpath:config.properties" 
		/> -->

	<bean name="wzpdb01" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="#{messages['url']}" />
		<property name="username" value="#{messages['username']}" />
		<property name="password" value="#{messages['password']}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="70" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />


		<property name="validationQuery" value="#{messages['validationQuery']}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<property name="filters" value="stat,wall" />
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>



	<!--对应一个sequence -->
	<bean id="sequencEntrance" class="com.reformer.sharding.sequence.impl.DefaultSequence">
		<property name="sequenceDao">
			<ref bean="sequenceDao" />
		</property>
		<!--这个sequence的名字，也就是在数据库中的那行数据中name列所对应的值 -->
		<property name="name">
			<value>seq_entrance_id</value>
		</property>
	</bean>

	<bean id="sequenceCharge" class="com.reformer.sharding.sequence.impl.DefaultSequence">
		<property name="sequenceDao">
			<ref bean="sequenceDao" />
		</property>
		<!--这个sequence的名字，也就是在数据库中的那行数据中name列所对应的值 -->
		<property name="name">
			<value>seq_charge_id</value>
		</property>
	</bean>

	<bean id="sequencePark" class="com.reformer.sharding.sequence.impl.DefaultSequence">
		<property name="sequenceDao">
			<ref bean="sequenceDao" />
		</property>
		<!--这个sequence的名字，也就是在数据库中的那行数据中name列所对应的值 -->
		<property name="name">
			<value>seq_park_id</value>
		</property>
	</bean>

	<bean id="sequencOpen" class="com.reformer.sharding.sequence.impl.DefaultSequence">
		<property name="sequenceDao">
			<ref bean="sequenceDao" />
		</property>
		<!--这个sequence的名字，也就是在数据库中的那行数据中name列所对应的值 -->
		<property name="name">
			<value>seq_open_id</value>
		</property>
	</bean>

	<bean id="sequenceDao" class="com.reformer.sharding.sequence.impl.DefaultSequenceDao">
		<property name="dataSource">
			<ref bean="wzpdb01" />
		</property>
		<property name="tableName">
			<value>sequence</value>
		</property>
		<!--默认步长是1000 -->
		<!--<property name="step"> <value>1000</value> </property> -->
	</bean>


	<bean name="cloudpark_inout_0000" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="#{messages['cloudparksharding_0000_url']}" />
		<property name="username" value="#{messages['cloudparkshardingusername']}" />
		<property name="password" value="#{messages['cloudparkshardingpassword']}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="150" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />



		<property name="validationQuery" value="#{messages['validationQuery']}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="stat,wall" />
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>

	<bean name="cloudpark_inout_0001" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="#{messages['cloudparksharding_0001_url']}" />
		<property name="username" value="#{messages['cloudparkshardingusername']}" />
		<property name="password" value="#{messages['cloudparkshardingpassword']}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="150" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />



		<property name="validationQuery" value="#{messages['validationQuery']}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="stat,wall" />
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>



	<bean name="cloudpark_inout_0002" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="#{messages['cloudparksharding_0002_url']}" />
		<property name="username" value="#{messages['cloudparkshardingusername']}" />
		<property name="password" value="#{messages['cloudparkshardingpassword']}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="150" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />


		<property name="validationQuery" value="#{messages['validationQuery']}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="stat,wall" />
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>




	<bean name="cloudpark_inout_0003" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- <property name="url" value="jdbc:mysql://rds1r5e9ydqx78904jrhapublic.mysql.rds.aliyuncs.com:3306/cloudpark_inout_0003" 
			/> <property name="username" value="reformer" /> <property name="password" 
			value="Rfdj24U0ab53uihDs2h430CpA0048j" /> -->
		<property name="url" value="#{messages['cloudparksharding_0003_url']}" />
		<property name="username" value="#{messages['cloudparkshardingusername']}" />
		<property name="password" value="#{messages['cloudparkshardingpassword']}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="150" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />


		<property name="validationQuery" value="#{messages['validationQuery']}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="stat,wall" />
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>

	<rdb:strategy id="databaseShardingStrategy"
		sharding-columns="ParkingLotNo"
		algorithm-class="cn.rf.hz.web.sharding.algorithm.SingleKeyModuloDatabaseShardingAlgorithm" />

	<rdb:data-source id="shardingDataSource">
		<rdb:sharding-rule
			data-sources="cloudpark_inout_0000,cloudpark_inout_0001,cloudpark_inout_0002,cloudpark_inout_0003"
			default-data-source="cloudpark_inout_0000">
			<rdb:table-rules>
				<!--出入场 -->
				<rdb:table-rule logic-table="tc_usercrdtm"
					database-strategy="databaseShardingStrategy" />
				<!--场内 -->
				<rdb:table-rule logic-table="tc_usercrdtm_in"
					database-strategy="databaseShardingStrategy" />
				<!--场内异常 -->
				<rdb:table-rule logic-table="tc_usercrdtm_abnormal"
					database-strategy="databaseShardingStrategy" />

				<!--缴费 -->
				<rdb:table-rule logic-table="tc_chargerecordinfo"
					database-strategy="databaseShardingStrategy" />
				<!-- 开闸 -->
				<rdb:table-rule logic-table="tc_opengaterecord"
					database-strategy="databaseShardingStrategy" />

			</rdb:table-rules>
		</rdb:sharding-rule>
	</rdb:data-source>

</beans>
