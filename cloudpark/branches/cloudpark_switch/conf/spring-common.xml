<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		 http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		 http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-autowire="byName">
	<!-- Annotation Config -->
	<context:annotation-config />

	<!-- 配置数据源 分库squenc数据源 -->
	<bean name="clouddataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="#{messages['cloudurl']}" />
		<property name="username" value="#{messages['cloudusername']}" />
		<property name="password" value="#{messages['cloudpassword']}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="10" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="2" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="#{messages['validationQuery']}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<!--<property name="minEvictableIdleTimeMillis" value="25200000" /> -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="stat,wall" />
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>

	<!--云停车车场信息库 -->

	<bean id="cloudsqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="clouddataSource" />
		<property name="configLocation" value="classpath:mybatis_config.xml" />
	</bean>

	<!-- MyBatis Sql 出入场表，分库 -->
	<bean id="sqlSessionFactorySharding" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="shardingDataSource" />
		<property name="configLocation" value="classpath:mybatis_config_sharding.xml" />
	</bean>



	<!-- ***************事务配置************** -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="shardingDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<aop:config>
		<!-- (execution(* cn.rf.hz.web.service.*.*(..)) or execution(* cn.rf.hz.web.service.gd.*.*(..))) 
			or -->
		<!-- <aop:advisor pointcut="execution(* cn.rf.hz.web.service..*.*(..))" 
			advice-ref="txAdvice" /> -->
		<aop:advisor pointcut="execution(* cn.rf.hz.web.cloudpark.impl..*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="get*" read-only="true" /> -->
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="add" propagation="REQUIRED" />
			<!-- 所有方法都使用事务 -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 打开aspect注解处理器 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- <bean id="AspectLog" class="cn.rf.hz.web.annotation.AspectLog" /> -->
	<!-- 扫描mapper自动配置 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" autowire="byName"> 
		<property name="basePackage" value="cn.rf.hz.web.cloudpark.dao" /> <property 
		name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> </bean> -->
	<!-- 云停车车场信息 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		autowire="byName">
		<property name="basePackage" value="cn.rf.hz.web.cloudpark.daoxx" />
		<property name="sqlSessionFactoryBeanName" value="cloudsqlSessionFactory" />
	</bean>

	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" autowire="byName"> 
		<property name="basePackage" value="cn.rf.hz.web.mapper" /> <property name="sqlSessionFactoryBeanName" 
		value="sqlSessionFactory" /> </bean> -->

	<!-- 扫描mapper自动配置(支持分片的数据源) -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		autowire="byName">
		<property name="basePackage" value="cn.rf.hz.web.sharding.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactorySharding" />
	</bean>

	<!-- Spring 工具类 -->
	<bean id="springContextUtil" class="cn.rf.hz.web.utils.SpringContextUtil" />


</beans>

